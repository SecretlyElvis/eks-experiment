###################################################
# Basic application for testing Ingress Controllers
# Currently usable for HAProxy and AWS Load Balancer Controller testing
#
# For HAProxy:
#   - uncommehnt annotations in the 'Service' sections
#  - comment the annotations in the 'Ingress' sections
# For AWS Load Balancer Controller
#  - uncomment annotations in the 'Ingress' sections
#  - comment the annotations in the 'Service' sections

apiVersion: v1
kind: Namespace
metadata:
  name: test-app
  
---
#### TEST APP 1
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: app-1
  name: app-1
  namespace: test-app
spec:
  replicas: 2
  selector:
    matchLabels:
      run: app-1
  template:
    metadata:
      labels:
        run: app-1
    spec:
      containers:
      - name: app-1
        image: secretlyelvis/helloworld:test1
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: app-1
  name: app-1
  namespace: test-app
# Uncomment these lines if using the HAProxy Ingress Controller
#  annotations:
#    haproxy.org/check: "enabled"
#    haproxy.org/forwarded-for: "enabled"
#    haproxy.org/load-balance: "roundrobin"
spec:
# set type to 'ClusterIP' for HAProxy and 'NodePort' for AWS LBC
  type: NodePort
  selector:
    run: app-1
  ports:
  - name: port-1
    port: 80
    protocol: TCP
    targetPort: 8080

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: test-ingress1
  namespace: test-app
# Uncomment these lines if using the ALB Ingress Controller
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
#    alb.ingress.kubernetes.io/group.name: test-app
spec:
  rules:
  - host: test1.devops-poc.com
    http:
      paths:
      - path: /*
        backend:
          serviceName: app-1
          servicePort: 80

---
#### TEST APP 2
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: app-2
  name: app-2
  namespace: test-app
spec:
  replicas: 2
  selector:
    matchLabels:
      run: app-2
  template:
    metadata:
      labels:
        run: app-2
    spec:
      containers:
      - name: app-2
        image: secretlyelvis/helloworld:test2
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: app-2
  name: app-2
  namespace: test-app
# Uncomment these lines if using the HAProxy Ingress Controller
#  annotations:
#    haproxy.org/check: "enabled"
#    haproxy.org/forwarded-for: "enabled"
#    haproxy.org/load-balance: "roundrobin"
spec:
# set type to 'ClusterIP' for HAProxy and 'NodePort' for AWS LBC
  type: NodePort
  selector:
    run: app-2
  ports:
  - name: port-2
    port: 8080
    protocol: TCP
    targetPort: 8080

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: test-ingress2
  namespace: test-app
# Uncomment these lines if using the ALB Ingress Controller
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
#    alb.ingress.kubernetes.io/group.name: test-app
spec:
  rules:
  - host: test2.devops-poc.com
    http:
      paths:
      - path: /*
        backend:
          serviceName: app-2
          servicePort: 8080